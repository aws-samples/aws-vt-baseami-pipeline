{
  "variables": {
    "region": "us-east-1",
    "flag": "ubuntu1804-base",
    "subnet_id": "subnet-5163b237",
    "security_groupids": "sg-053996a563511a3c6,sg-050407dfb1c555723",
    "build_ami": "ami-0ac80df6eff0e70b5",
    "xilinx-video-sdk_version": "v1.5",
    "xilinx-video-releasedir": "U30_Ubuntu_18.04_v1.5_20210827"
  },
  "builders": [{
    "type": "amazon-ebs",
    "region": "{{user `region`}}",
    "source_ami": "{{user `build_ami`}}",
    "run_tags": {
        "Name": "packer-vt-processor-{{user `flag`}}"
    },
    "subnet_id": "{{user `subnet_id`}}",
    "security_group_ids": "{{user `security_groupids`}}",
    "instance_type": "vt1.3xlarge",
    "ssh_username": "ubuntu",
    "ami_name": "ul18-xilinx-vt-processor_{{user `flag`}}-{{timestamp}}",
    "launch_block_device_mappings":[{
      "delete_on_termination": true,
      "device_name": "/dev/sda1",
      "volume_size": 100,
      "throughput": 1000,
      "iops": 8000,
      "volume_type": "gp3"
    }]
  }],
  "provisioners": [{
    "type": "shell",
    "expect_disconnect": true,
    "inline": [
      "sudo apt update && sudo DEBIAN_FRONTEND=noninteractive apt -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' upgrade -y",
      "sudo apt update && sudo DEBIAN_FRONTEND=noninteractive apt install -y linux-aws git libtool autoconf cmake nasm unzip python3 python3-distutils python3-wheel python3-dev python3-numpy pigz parallel nfs-common build-essential hwloc libjemalloc1 libnuma-dev numactl libjemalloc-dev preload ulatency ulatencyd htop iftop liblapack-dev libgfortran3 ipcalc wget curl dkms",
      "echo 'GRUB_CMDLINE_LINUX='intel_idle.max_cstate=1'' | sudo tee -a /etc/default/grub",
      "curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && sudo python3 /tmp/get-pip.py",
      "wget -O - https://fsx-lustre-client-repo-public-keys.s3.amazonaws.com/fsx-ubuntu-public-key.asc | sudo apt-key add -",
      "echo 'deb https://fsx-lustre-client-repo.s3.amazonaws.com/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/fsxlustreclientrepo.list",
      "uname -r",
      "sudo apt update",
      "sudo systemctl disable unattended-upgrades.service",
      "sudo systemctl disable ondemand.service",
      "sudo ufw disable",
      "sudo shutdown -r now"]
    },
    {
    "type": "shell",
    "inline_shebang":"/bin/bash -xe",
    "inline": [
      "uname -r",
      "sudo apt update && sudo DEBIAN_FRONTEND=noninteractive apt install -y lustre-client-modules-$(uname -r) lustre-client-modules-aws"]
    },
    {
    "type": "shell",
    "inline": [
      "uname -r",
      "wget -O /tmp/awscli2.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip",
      "cd /tmp && sudo unzip /tmp/awscli2.zip",
      "sudo /tmp/aws/install",
      "aws configure set default.s3.max_concurrent_requests 100",
      "aws configure set default.s3.max_queue_size 10000",
      "aws configure set default.s3.multipart_threshold 64MB",
      "aws configure set default.s3.multipart_chunksize 16MB"]
    },
    {
    "type": "shell",
    "inline": [
      "echo 'net.core.default_qdisc = fq' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.ipv4.tcp_congestion_control = bbr' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.ipv4.tcp_timestamps = 0' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.core.rmem_max = 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.core.wmem_max = 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.ipv4.tcp_rmem = 4096 87380 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.ipv4.tcp_wmem = 4096 65536 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.core.netdev_max_backlog = 30000' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.core.rmem_default = 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.core.wmem_default = 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.ipv4.tcp_mem = 67108864 67108864 67108864' | sudo tee -a /etc/sysctl.conf",
      "echo 'net.ipv4.route.flush = 1' | sudo tee -a /etc/sysctl.conf",
      "sudo sysctl -p"]
    },
        {
    "type": "shell",
    "inline_shebang": "/bin/bash -xe",
    "inline": [
      "uname -r",
      "sudo apt install -y linux-headers-$(uname -r)",
      "git clone https://github.com/Xilinx/video-sdk.git -b {{user `xilinx-video-sdk_version`}}",
      "cd video-sdk/release/{{user `xilinx-video-releasedir`}}",
      "bash install.sh",
      "sudo bash -c 'source /opt/xilinx/xcdr/setup.sh'"]
    },
    {
    "type": "shell",
    "inline_shebang": "/bin/bash -xe",
    "inline": [
      "echo '    StrictHostKeyChecking no' | sudo tee -a /etc/ssh/ssh_config",
      "echo '    HostbasedAuthentication no' | sudo tee -a /etc/ssh/ssh_config",
      "echo '    CheckHostIP no' | sudo tee -a /etc/ssh/ssh_config"]
    },
    {
    "type": "shell",
    "inline_shebang": "/bin/bash -xe",
    "inline": [
      "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -",
      "sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'",
      "sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io",
      "echo -e '{\"default-ulimits\":{\"memlock\":{\"Name\":\"memlock\",\"Soft\":-1,\"Hard\":-1}}}' | sudo tee /etc/docker/daemon.json",
      "sudo systemctl restart docker",
      "sudo usermod -aG docker $USER"
      ]
    }
  ]
}
